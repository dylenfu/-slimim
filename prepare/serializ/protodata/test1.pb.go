// Code generated by protoc-gen-go.
// source: test1.proto
// DO NOT EDIT!

/*
Package protodata is a generated protocol buffer package.

It is generated from these files:
	test1.proto
	test.proto

It has these top-level messages:
	Test1
	Test2
	Test
*/
package protodata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Test1_EDEMO int32

const (
	Test1_UNKNOWN Test1_EDEMO = 0
	Test1_X       Test1_EDEMO = 17
	Test1_Y       Test1_EDEMO = 18
)

var Test1_EDEMO_name = map[int32]string{
	0:  "UNKNOWN",
	17: "X",
	18: "Y",
}
var Test1_EDEMO_value = map[string]int32{
	"UNKNOWN": 0,
	"X":       17,
	"Y":       18,
}

func (x Test1_EDEMO) String() string {
	return proto.EnumName(Test1_EDEMO_name, int32(x))
}
func (Test1_EDEMO) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Test1 struct {
	Users map[string]int32 `protobuf:"bytes,1,rep,name=users" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Page  int64            `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Names []string         `protobuf:"bytes,3,rep,name=names" json:"names,omitempty"`
	Ed    Test1_EDEMO      `protobuf:"varint,4,opt,name=ed,enum=protodata.Test1_EDEMO" json:"ed,omitempty"`
}

func (m *Test1) Reset()                    { *m = Test1{} }
func (m *Test1) String() string            { return proto.CompactTextString(m) }
func (*Test1) ProtoMessage()               {}
func (*Test1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Test1) GetUsers() map[string]int32 {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Test1) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Test1) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *Test1) GetEd() Test1_EDEMO {
	if m != nil {
		return m.Ed
	}
	return Test1_UNKNOWN
}

type Test2 struct {
	Page  int32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *Test2) Reset()                    { *m = Test2{} }
func (m *Test2) String() string            { return proto.CompactTextString(m) }
func (*Test2) ProtoMessage()               {}
func (*Test2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Test2) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Test2) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*Test1)(nil), "protodata.Test1")
	proto.RegisterType((*Test2)(nil), "protodata.Test2")
	proto.RegisterEnum("protodata.Test1_EDEMO", Test1_EDEMO_name, Test1_EDEMO_value)
}

func init() { proto.RegisterFile("test1.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x8f, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0xcd, 0xa6, 0x51, 0x3a, 0x0b, 0x12, 0x07, 0x91, 0xa0, 0x97, 0x92, 0x83, 0xf4, 0x14,
	0xd8, 0xf5, 0x52, 0x3c, 0xbb, 0x27, 0x71, 0x0b, 0xc1, 0xa2, 0x1e, 0x23, 0x0d, 0x22, 0xd6, 0x76,
	0xd9, 0x64, 0x85, 0xfd, 0xcb, 0xfe, 0x0a, 0xf3, 0x01, 0xeb, 0xa1, 0xa7, 0xcc, 0xcb, 0xbc, 0x3c,
	0xf3, 0x04, 0x4a, 0x6f, 0x9d, 0xaf, 0x54, 0xd7, 0x1f, 0xfc, 0x01, 0xe7, 0xe9, 0xd9, 0x1a, 0x6f,
	0xe4, 0x2f, 0x01, 0xf6, 0x1c, 0x57, 0x58, 0x01, 0x1b, 0x9c, 0xed, 0x9d, 0x20, 0x0b, 0xba, 0x2c,
	0xeb, 0x1b, 0x35, 0x95, 0x54, 0x2a, 0xa8, 0x4d, 0xdc, 0x36, 0x7b, 0xdf, 0x8f, 0x3a, 0x37, 0x11,
	0x61, 0xd6, 0x99, 0x0f, 0x2b, 0x8a, 0x05, 0x59, 0x52, 0x9d, 0x66, 0xbc, 0x04, 0xb6, 0x37, 0xdf,
	0xd6, 0x09, 0x1a, 0x30, 0x73, 0x9d, 0x03, 0xde, 0x42, 0x61, 0xb7, 0x62, 0x16, 0x7a, 0xe7, 0xf5,
	0xd5, 0x11, 0xb9, 0x79, 0x68, 0x9e, 0xd6, 0x3a, 0x34, 0xae, 0x57, 0x00, 0xff, 0x67, 0x90, 0x03,
	0xfd, 0xb2, 0x63, 0x10, 0x22, 0x81, 0x14, 0xc7, 0x48, 0xff, 0x31, 0xbb, 0x21, 0x9f, 0x64, 0x3a,
	0x87, 0xfb, 0x62, 0x45, 0xa4, 0x04, 0x96, 0x30, 0x58, 0xc2, 0xd9, 0xa6, 0x7d, 0x6c, 0xd7, 0x2f,
	0x2d, 0x3f, 0x41, 0x06, 0xe4, 0x95, 0x5f, 0xc4, 0xe7, 0x8d, 0xa3, 0xac, 0xf2, 0x5f, 0xeb, 0x49,
	0x9c, 0x24, 0xca, 0x24, 0xee, 0x3f, 0xfd, 0x2e, 0xa3, 0x83, 0x78, 0x0a, 0xef, 0xa7, 0xc9, 0xf5,
	0xee, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x6d, 0xed, 0x8b, 0x21, 0x40, 0x01, 0x00, 0x00,
}
